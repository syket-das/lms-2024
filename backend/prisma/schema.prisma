// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum TransactionType {
  BORROW
  RESERVE
}

enum TransactionStatus {
  ACTIVE
  RETURNED
}

model User {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  email           String            @unique
  name            String
  username        String            @unique
  password        String
  phone           String
  role            Role              @default(USER)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  BookTransaction BookTransaction[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]
}

model Book {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  author          String
  language        String
  image           String
  bookCount       Int
  Category        Category?         @relation(fields: [categoryId], references: [id])
  categoryId      String?           @db.ObjectId
  BookTransaction BookTransaction[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model BookTransaction {
  id         String            @id @default(auto()) @map("_id") @db.ObjectId
  book       Book              @relation(fields: [bookId], references: [id])
  bookId     String            @db.ObjectId
  user       User              @relation(fields: [userId], references: [id])
  userId     String            @db.ObjectId
  type       TransactionType
  fromDate   DateTime
  toDate     DateTime
  returnedAt DateTime?
  status     TransactionStatus @default(ACTIVE)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}
